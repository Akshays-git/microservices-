=== Travel Agent Management System API Test Script ===
This script will test all endpoints of your microservices application
Sun Apr 20 01:06:20 PM IST 2025

=== Testing Agent Service ===
Testing: Create a new agent
URL: POST http://localhost:8000/agents
Payload: {
    "name": "John Smith",
    "email": "john@example.com",
    "phone": "123-456-7890",
    "availability": {
        "days": ["Monday", "Wednesday", "Friday"],
        "shift": "morning"
    }
}
Success! Response:
{
  "id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
  "name": "John Smith",
  "email": "john@example.com",
  "phone": "123-456-7890",
  "rating": 0.0,
  "availability": {
    "days": [
      "Monday",
      "Wednesday",
      "Friday"
    ],
    "shift": "morning"
  }
}
Created agent with ID: fb4c7017-0d73-4b8e-a0fc-d2febf480eeb

Testing: List all agents
URL: GET http://localhost:8000/agents
Success! Response:
[
  {
    "id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "name": "John Smith",
    "email": "john@example.com",
    "phone": "123-456-7890",
    "rating": 0.0,
    "availability": {
      "days": [
        "Monday",
        "Wednesday",
        "Friday"
      ],
      "shift": "morning"
    }
  }
]

Testing: Get specific agent
URL: GET http://localhost:8000/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb
Success! Response:
{
  "id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
  "name": "John Smith",
  "email": "john@example.com",
  "phone": "123-456-7890",
  "rating": 0.0,
  "availability": {
    "days": [
      "Monday",
      "Wednesday",
      "Friday"
    ],
    "shift": "morning"
  }
}

Testing: Update agent availability
URL: PUT http://localhost:8000/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/availability
Payload: {
    "days": ["Tuesday", "Thursday"],
    "shift": "evening"
}
Success! Response:
{
  "days": [
    "Tuesday",
    "Thursday"
  ],
  "shift": "evening"
}

Testing: Get agent availability
URL: GET http://localhost:8000/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/availability
Success! Response:
{
  "days": [
    "Tuesday",
    "Thursday"
  ],
  "shift": "evening"
}

=== Testing Booking Service ===
Testing: Create a new booking
URL: POST http://localhost:8001/bookings
Payload: {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "customer_name": "Alice Johnson",
    "service_type": "Flight",
    "price": 350.00
}
Success! Response:
{
  "booking_id": "7db2016a-3d15-4fa5-86f8-308b7583d8a0",
  "commission_amount": 35.0
}
Created booking with ID: 7db2016a-3d15-4fa5-86f8-308b7583d8a0

Testing: Get agent bookings
URL: GET http://localhost:8001/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/bookings
Success! Response:
[
  {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "customer_name": "Alice Johnson",
    "service_type": "Flight",
    "price": 350.0
  }
]

Testing: Get agent commission
URL: GET http://localhost:8001/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/commission
Success! Response:
[
  {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "booking_id": "7db2016a-3d15-4fa5-86f8-308b7583d8a0",
    "commission_percentage": 10.0,
    "commission_amount": 35.0
  }
]

=== Testing Sales Service ===
Testing: Record a sale
URL: POST http://localhost:8002/sales/record
Payload: {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "price": 450.00
}
Success! Response:
{
  "message": "Sale recorded"
}

Testing: Get sales by agent
URL: GET http://localhost:8002/sales/by-agent/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb
Success! Response:
[
  {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "sales": 450.0
  }
]

Testing: Get sales trends
URL: GET http://localhost:8002/sales/trends
Success! Response:
{
  "trend": "positive",
  "growth_percentage": 10
}

=== Testing Invoicing Service ===
Testing: Generate an invoice
URL: POST http://localhost:8003/invoice
Payload: {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "customer_name": "Bob Wilson",
    "amount": 550.00
}
Success! Response:
{
  "invoice_id": "af9117d2-ded5-4761-8996-a60cbf5d96cc",
  "amount": 550.0
}

Testing: Process agent payout
URL: POST http://localhost:8003/payout
Payload: {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "payout_amount": 220.00
}
Success! Response:
{
  "payout_id": "4c54f785-e06b-44f1-bca4-2f2db322f153",
  "amount": 220.0
}

Testing: Get agent payouts
URL: GET http://localhost:8003/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/payouts
Success! Response:
[
  {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "payout_amount": 220.0
  }
]

=== Testing Train Booking Service ===
Testing: List all trains
URL: GET http://localhost:8004/trains
Success! Response:


Testing: Get specific train details
URL: GET http://localhost:8004/trains/TRN001
Success! Response:


Testing: Create a new train booking
URL: POST http://localhost:8004/train-bookings
Payload: {
    "agent_id": "fb4c7017-0d73-4b8e-a0fc-d2febf480eeb",
    "train_number": "TRN001",
    "travel_date": "2025-05-15",
    "passenger_count": 2,
    "train_class": "First Class",
    "passengers": [
        {
            "name": "Jane Smith",
            "age": 35,
            "id_type": "Passport",
            "id_number": "AB123456"
        },
        {
            "name": "David Smith",
            "age": 40,
            "id_type": "Passport",
            "id_number": "CD789012"
        }
    ],
    "special_requests": "Window seats preferred"
}
Success! Response:

Created train booking with ID: 

Testing: List all train bookings
URL: GET http://localhost:8004/train-bookings
Success! Response:


Testing: Get specific train booking details
URL: GET http://localhost:8004/train-bookings/
Success! Response:


Testing: Get agent's train bookings
URL: GET http://localhost:8004/agents/fb4c7017-0d73-4b8e-a0fc-d2febf480eeb/train-bookings
Success! Response:


Testing: Cancel train booking
URL: PUT http://localhost:8004/train-bookings//cancel
Success! Response:


Testing: Search train bookings by criteria
URL: GET http://localhost:8004/train-bookings/search?agent_id=fb4c7017-0d73-4b8e-a0fc-d2febf480eeb&status=Cancelled
Success! Response:


=== Test Complete ===
All endpoints have been tested.

Generating PDF report...
Attempting to generate PDF using Python...
Python is available but required modules are not installed.
Install one with: pip install weasyprint or pip install pdfkit
Text report is available at: api_test_results.txt
HTML report is available at: api_test_results.html
PDF report is available at: api_test_results.pdf
